name: Build and Deploy WAR to Tomcat

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      context_path:
        description: "Tomcat context path (e.g., /bwp-latest)"
        required: false
        default: "/bwp-latest"

jobs:
  build:
    name: Build WAR
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Make Gradle executable (if needed)
        run: chmod +x gradlew

      - name: Build WAR
        run: ./gradlew clean bootWar --stacktrace --warning-mode all

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: bwp-war
          path: build/libs/bwp-latest.war

  deploy:
    name: Deploy to Tomcat
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Download WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: bwp-war
          path: dist

      - name: Show downloaded files
        run: ls -la dist

      - name: Deploy via Tomcat Manager text API (update if exists)
        env:
          TOMCAT_URL: ${{ secrets.TOMCAT_URL }}
          TOMCAT_USER: ${{ secrets.TOMCAT_USER }}
          TOMCAT_PASSWORD: ${{ secrets.TOMCAT_PASSWORD }}
          CONTEXT_PATH: ${{ github.event.inputs.context_path || secrets.CONTEXT_PATH || '/bwp-latest' }}
        run: |
          set -e
          WAR_FILE="dist/bwp-latest.war"
          if [ ! -f "$WAR_FILE" ]; then
            echo "WAR not found at $WAR_FILE" >&2
            exit 1
          fi

          if [ -z "$TOMCAT_URL" ] || [ -z "$TOMCAT_USER" ] || [ -z "$TOMCAT_PASSWORD" ]; then
            echo "Missing TOMCAT_URL/TOMCAT_USER/TOMCAT_PASSWORD secrets." >&2
            exit 1
          fi

          # Normalize context path to start with '/'
          if [ -z "$CONTEXT_PATH" ]; then CONTEXT_PATH="/bwp-latest"; fi
          case "$CONTEXT_PATH" in
            /*) ;;
            *) CONTEXT_PATH="/$CONTEXT_PATH" ;;
          esac

          echo "Using context path: $CONTEXT_PATH"

          # Try undeploy first to ensure a clean state (ignore failures)
          echo "Attempt undeploy (ignore errors)" || true
          curl -fsS -u "$TOMCAT_USER:$TOMCAT_PASSWORD" \
            "$TOMCAT_URL/manager/text/undeploy?path=$CONTEXT_PATH" || true

          # Deploy new WAR
          echo "Deploying new WAR to $TOMCAT_URL$CONTEXT_PATH"
          curl -fsS -u "$TOMCAT_USER:$TOMCAT_PASSWORD" \
            -T "$WAR_FILE" \
            "$TOMCAT_URL/manager/text/deploy?path=$CONTEXT_PATH&update=true"

          echo "Deployment request sent. Checking app status..."
          sleep 2
          curl -fsS -u "$TOMCAT_USER:$TOMCAT_PASSWORD" "$TOMCAT_URL/manager/text/list" | sed -n "s/^.*$CONTEXT_PATH:.*$/&/p"

#
# Required GitHub Secrets (set in repo Settings > Secrets and variables > Actions):
#   TOMCAT_URL       - Base URL of Tomcat, e.g., https://example.com:8443 or http://server:8080
#   TOMCAT_USER      - Tomcat manager username (with manager-script role)
#   TOMCAT_PASSWORD  - Tomcat manager password
# Optional:
#   CONTEXT_PATH     - Context path for the app (default: /bwp-latest)
#
# Notes:
# - Ensure Tomcat's Manager App is installed and the user has the 'manager-script' role.
# - In conf/tomcat-users.xml, define a user like:
#     <role rolename="manager-script"/>
#     <user username="deployer" password="REDACTED" roles="manager-script"/>
# - The build.gradle already names the WAR 'bwp-latest.war' via bootWar.
# - Logging is configured to write to ${catalina.base}/logs when present.
